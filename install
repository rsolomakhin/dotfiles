#!/bin/bash
#
# Copyright 2015 Rouslan Solomakhin
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

die() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@" >&2
  exit 1
}

pushd $(dirname ${BASH_SOURCE[0]})

git config user.email "rouslan.solomakhin@gmail.com" \
  || die "Cannot set git user email for this repository"
git config --global --get user.email \
  || git config --global user.email "rouslan.solomakhin@gmail.com" \
  || die "Cannot set global git user email"
git config --global --replace-all alias.br branch || die "Cannot alias git br"
git config --global --replace-all alias.brv "branch -vv" \
  || die "Cannot alias git brv"
git config --global --replace-all alias.can "commit -a --amend --no-edit" \
  || die "Cannot alias git can"
git config --global --replace-all alias.co checkout || die "Cannot alias git co"
git config --global --replace-all alias.ls ls-files || die "Cannot alias git ls"
git config --global --replace-all alias.st status || die "Cannot alias git st"
git config --global --replace-all alias.sub \
  "submodule update --init --recursive" || die "Cannot alias git sub"
git config --global --replace-all color.ui auto \
  || die "Cannot enable git colors"
git config --global --replace-all core.autocrlf false \
  || die "Cannot set git autoclrf"
git config --global --replace-all core.excludesfile ~/.cvsignore \
  || die "Cannot set git excludes file"
git config --global --replace-all core.filemode false \
  || die "Cannot disable git filemode"
git config --global --replace-all http.cookiefile ~/.gitcookies \
  || die "Cannot set git cookie file"
git config --global --replace-all user.name "Rouslan Solomakhin" \
  || die "Cannot set git user name"

git submodule update --init --recursive || die "Cannot update submodules"

mkdir -pv $HOME/software/bin || die "Cannot create $HOME/software/bin dir"
mkdir -pv ~/.vim/swap || die "Cannot create the vim swap dir"
mkdir -pv ~/.vim/autoload || die "Cannot create autoload dir"

export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$PATH
export PATH=$HOME/software/bin:$PATH \
  || die "Cannot add $HOME/software/bin to the path"

CONFIGS="cvsignore tmux.conf vim/bundle bashrc bash_profile"
PROGS="cmake curl npm"
which apt-get > /dev/null
if [ $? -eq 0 ]; then
  CONFIGS="$CONFIGS fluxbox/apps fluxbox/menu fluxbox/startup fluxbox/init fluxbox/keys fluxbox/windowmenu Xresources"
  PROGS="$PROGS golang fluxbox python-dev"
  sudo apt-get install $PROGS || die "Cannot install programs"
  ln -svfT /usr/bin/nodejs $HOME/software/bin/node \
    || die "Cannot link node to nodejs"
else
  if [ ! -e $HOME/software/bin/brew ]; then
    pushd $HOME/software || die "Cannot change dir to $HOME/software"
    curl -L https://github.com/Homebrew/homebrew/tarball/master \
      | tar xz --strip 1 \
      || die "Cannot download homebrew"
    popd || die "Cannot return to previous dir"
  else
    brew update || die "Cannot update homebrew formulae"
    brew upgrade --all || die "Cannot upgrade all homebrew packages"
  fi
  PROGS="$PROGS go bash vim coreutils clang-format tmux"
  brew install $PROGS || die "Cannot install programs"
fi

LINKER=ln
$LINKER --version >& /dev/null || LINKER=gln
for file in $CONFIGS; do
  mkdir -pv ~/.`dirname $file` || die "Cannot create the dir for $file"
  $LINKER -sfvT $PWD/$file ~/.$file || die "Cannot link $file to home dir"
done

go get github.com/nsf/gocode || die "Cannot get gocode package for go"

NODE_MODULES="eslint eslint-config-google csslint tern"
npm install --global --prefix=$HOME/software $NODE_MODULES \
  || die "Cannot install NODE MODULES"

if [ ! -e ~/.vim/autoload/pathogen.vim ]; then
  curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim \
    || die "Cannot download vim-pathogen"
fi

pushd vim/bundle/YouCompleteMe || die "Cannot change dir"
./install.py --clang-completer --gocode-completer --tern-completer \
  || die "Cannot install YCM"
popd || die "Cannot go back"

$LINKER -sfvT ~/.dotfiles/vim/bundle/fzf ~/.fzf
pushd ~/.fzf || die "Cannot go to fzf dir"
./install --all || die "Cannot install fzf"
popd || die "Cannot go back"
